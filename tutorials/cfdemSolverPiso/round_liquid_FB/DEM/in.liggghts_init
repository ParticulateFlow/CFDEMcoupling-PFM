# Pour granular particles into a cylinder, then induce flow
echo   		both
atom_style      granular
atom_modify     map array
communicate     single vel yes
processors      4 4 1

boundary        f f f
newton          off
units           si

region          reg block -0.03 0.03 -0.03 0.03 0 2.0 units box
create_box      1 reg

neighbor        0.0005 bin #0.0003
neigh_modify    delay 0

# Material properties required for granular pair styles
fix	        m1 all property/global youngsModulus peratomtype 5.e6
fix             m2 all property/global poissonsRatio peratomtype 0.45
fix             m3 all property/global coefficientRestitution peratomtypepair 1 0.8
fix             m4 all property/global coefficientFriction peratomtypepair 1 0.5

# walls
fix 	        mesh   all mesh/surface file mesh/walls.stl type 1 move 0 0 0
fix	        walls  all wall/gran model hertz tangential history mesh n_meshes 1 meshes mesh
fix         	bottom all wall/gran model hertz tangential history primitive type 1 zplane 0
fix         	top    all wall/gran model hertz tangential history primitive type 1 zplane 2

# pair style
pair_style	gran model hertz tangential history
pair_coeff  	* *

# timestep, gravity
timestep	1e-5
fix		gravi all gravity 9.81 vector 0.0 0.0 -1.0 

# particle distributions and insertion
region     	bc cylinder z 0.0 0.0 0.0285 0 0.6 units box #insertion region
include		in.particleSizeDistribution
fix          	ins all insert/pack seed 100001 distributiontemplate pdd1 vel constant 0 0 0 insert_every 10000 overlapcheck yes all_in yes mass_in_region 0.87 region bc

# apply nve integration to all particles that are inserted as single particles
fix         	integr all nve/sphere

# screen output
compute         rke all erotate/sphere
thermo_style    custom step atoms ke c_rke vol
thermo          1000

# insert the first particles so that dump is not empty
run          	1
dump		dmp all custom 1000 ../DEM/post/dump*.liggghts_init id type x y z vx vy vz fx fy fz omegax omegay omegaz radius

# run for some steps
label           run 
run		10000

# repeat until kinetic energy is below treshold
variable        kinEn equal ke
if              "${kinEn} > 0.00001" then "jump SELF run"

# write restart file
write_restart   post/restart/liggghts.restart
