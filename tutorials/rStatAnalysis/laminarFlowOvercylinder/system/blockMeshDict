/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \    /   O peration     | Version:  2.1.x                                 |
|   \  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
	version		2.0;
	format		ascii;
	class		dictionary;
	object		blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //




convertToMeters 1.0;


vertices
(
	( 0.0 -0.25 0.0 )	 // x0y0z0 = 0
	( 0.0 -0.25 0.01 )	 // x0y0z1 = 1
	( 0.0 0.25 0.0 )	 // x0y1z0 = 2
	( 0.0 0.25 0.01 )	 // x0y1z1 = 3
	( 0.15000000000000002 -0.25 0.0 )	 // x1y0z0 = 4
	( 0.15000000000000002 -0.25 0.01 )	 // x1y0z1 = 5
	( 0.15000000000000002 0.25 0.0 )	 // x1y1z0 = 6
	( 0.15000000000000002 0.25 0.01 )	 // x1y1z1 = 7
	( 0.65 -0.25 0.0 )	 // x2y0z0 = 8
	( 0.65 -0.25 0.01 )	 // x2y0z1 = 9
	( 0.65 0.25 0.0 )	 // x2y1z0 = 10
	( 0.65 0.25 0.01 )	 // x2y1z1 = 11
	( 1.5 -0.25 0.0 )	 // x3y0z0 = 12
	( 1.5 -0.25 0.01 )	 // x3y0z1 = 13
	( 1.5 0.25 0.0 )	 // x3y1z0 = 14
	( 1.5 0.25 0.01 )	 // x3y1z1 = 15

	( 0.41767766952966373 0.017677669529663688 0.0 )	 // a0h0 = 16
	( 0.3823223304703363 0.01767766952966369 0.0 )	 // a1h0 = 17
	( 0.3823223304703363 -0.017677669529663688 0.0 )	 // a2h0 = 18
	( 0.41767766952966373 -0.01767766952966369 0.0 )	 // a3h0 = 19
	( 0.41767766952966373 0.017677669529663688 0.01 )	 // a0h1 = 20
	( 0.3823223304703363 0.01767766952966369 0.01 )	 // a1h1 = 21
	( 0.3823223304703363 -0.017677669529663688 0.01 )	 // a2h1 = 22
	( 0.41767766952966373 -0.01767766952966369 0.01 )	 // a3h1 = 23
);




blocks
(
    hex ( 0 4 6 2 1 5 7 3 )   ( 6 20 1 ) simpleGrading ( 1 1 1 )  // 0   ['x0y0z0', 'x1y0z0', 'x1y1z0', 'x0y1z0']
    hex ( 8 12 14 10 9 13 15 11 )   ( 34 20 1 ) simpleGrading ( 1 1 1 )  // 1   ['x2y0z0', 'x3y0z0', 'x3y1z0', 'x2y1z0']
// cylinder block
    hex ( 16 10 6 17 20 11 7 21 )   ( 18 20 1 ) simpleGrading ( 1 1 1 )  // 2   ['a0h0', 'b0h0', 'b1h0', 'a1h0']
    hex ( 17 6 4 18 21 7 5 22 )   ( 18 20 1 ) simpleGrading ( 1 1 1 )  // 3   ['a1h0', 'b1h0', 'b2h0', 'a2h0']
    hex ( 18 4 8 19 22 5 9 23 )   ( 18 20 1 ) simpleGrading ( 1 1 1 )  // 4   ['a2h0', 'b2h0', 'b3h0', 'a3h0']
    hex ( 19 8 10 16 23 9 11 20 )   ( 18 20 1 ) simpleGrading ( 1 1 1 )  // 5   ['a3h0', 'b3h0', 'b0h0', 'a0h0']
);




edges
(
    arc 16 17 ( 0.4 0.025 0.0 )// cyl block
    arc 17 18 ( 0.375 3.061616997868383e-18 0.0 )// cyl block
    arc 18 19 ( 0.4 -0.025 0.0 )// cyl block
    arc 19 16 ( 0.42500000000000004 -6.123233995736766e-18 0.0 )// cyl block
    arc 20 21 ( 0.4 0.025 0.01 )// cyl block
    arc 21 22 ( 0.375 3.061616997868383e-18 0.01 )// cyl block
    arc 22 23 ( 0.4 -0.025 0.01 )// cyl block
    arc 23 20 ( 0.42500000000000004 -6.123233995736766e-18 0.01 )// cyl block
);




boundary
(

inlet
{
  type patch;
  faces
  (
    ( 0 2 3 1 )  // ['x0y0z0', 'x0y1z0', 'x0y1z1', 'x0y0z1']
  );
}


outlet
{
  type patch;
  faces
  (
    ( 12 14 15 13 )  // ['x3y0z0', 'x3y1z0', 'x3y1z1', 'x3y0z1']
  );
}


cylinder
{
  type wall;
  faces
  (
    ( 16 17 21 20 )  // ['a0h0', 'a1h0', 'a1h1', 'a0h1']
    ( 17 18 22 21 )  // ['a1h0', 'a2h0', 'a2h1', 'a1h1']
    ( 18 19 23 22 )  // ['a2h0', 'a3h0', 'a3h1', 'a2h1']
    ( 19 16 20 23 )  // ['a3h0', 'a0h0', 'a0h1', 'a3h1']
  );
}


sides
{
  type patch;
  faces
  (
    ( 0 4 5 1 )  // ['x0y0z0', 'x1y0z0', 'x1y0z1', 'x0y0z1']
    ( 2 6 7 3 )  // ['x0y1z0', 'x1y1z0', 'x1y1z1', 'x0y1z1']
    ( 4 8 9 5 )  // ['x1y0z0', 'x2y0z0', 'x2y0z1', 'x1y0z1']
    ( 6 10 11 7 )  // ['x1y1z0', 'x2y1z0', 'x2y1z1', 'x1y1z1']
    ( 8 12 13 9 )  // ['x2y0z0', 'x3y0z0', 'x3y0z1', 'x2y0z1']
    ( 10 14 15 11 )  // ['x2y1z0', 'x3y1z0', 'x3y1z1', 'x2y1z1']
  );
}

);




mergePatchPairs
(
);



// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //
