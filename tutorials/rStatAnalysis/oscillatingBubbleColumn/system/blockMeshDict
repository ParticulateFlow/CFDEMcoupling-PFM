/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

// # this blockMeshDict was generated by m4

// # vertex coordinates were generated using pre-defined symbols
vertices
(
    // first row - 17
    (0  0 0)	// 0
    (0.085 0 0)	// 1
    (0.115 0 0)	// 2
    (0.20 0 0)	// 3
    
    (0  0.02 0)	// 4
    (0.085 0.02 0)	// 5
    (0.115 0.02 0)	// 6
    (0.20 0.02 0)	// 7
    
    (0  0.03 0)	// 8
    (0.085 0.03 0)	// 9
    (0.115 0.03 0)	// 10
    (0.20 0.03 0)	// 11
    
    (0  0.05 0)	// 12
    (0.085 0.05 0)	// 13
    (0.115 0.05 0)	// 14
    (0.20 0.05 0)	// 15
    
    // second row
    (0  0 0.10)	// 16
    (0.085 0 0.10)	// 17
    (0.115 0 0.10)	// 18
    (0.20 0 0.10)	// 19
    
    (0  0.02 0.10)	// 20
    (0.085 0.02 0.10)	// 21
    (0.115 0.02 0.10)	// 22
    (0.20 0.02 0.10)	// 23
    
    (0  0.03 0.10)	// 24
    (0.085 0.03 0.10)	// 25
    (0.115 0.03 0.10)	// 26
    (0.20 0.03 0.10)	// 27
    
    (0  0.05 0.10)	// 28
    (0.085 0.05 0.10)	// 29
    (0.115 0.05 0.10)	// 30
    (0.20 0.05 0.10)	// 31
    
    // third row
    (0  0 0.30)	// 32
    (0.085 0 0.30)	// 33
    (0.115 0 0.30)	// 34
    (0.20 0 0.30)	// 35
    
    (0  0.02 0.30)	// 36
    (0.085 0.02 0.30)	// 37
    (0.115 0.02 0.30)	// 38
    (0.20 0.02 0.30)	// 39
    
    (0  0.03 0.30)	// 40
    (0.085 0.03 0.30)	// 41
    (0.115 0.03 0.30)	// 42
    (0.20 0.03 0.30)	// 43
    
    (0  0.05 0.30)	// 44
    (0.085 0.05 0.30)	// 45
    (0.115 0.05 0.30)	// 46
    (0.20 0.05 0.30)	// 47
    
    // forth row
    (0  0 0.45)	// 48
    (0.085 0 0.45)	// 49
    (0.115 0 0.45)	// 50
    (0.20 0 0.45)	// 51
    
    (0  0.02 0.45)	// 52
    (0.085 0.02 0.45)	// 53
    (0.115 0.02 0.45)	// 54
    (0.20 0.02 0.45)	// 55
    
    (0  0.03 0.45)	// 56
    (0.085 0.03 0.45)	// 57
    (0.115 0.03 0.45)	// 58
    (0.20 0.03 0.45)	// 59
    
    (0  0.05 0.45)	// 60
    (0.085 0.05 0.45)	// 61
    (0.115 0.05 0.45)	// 62
    (0.20 0.05 0.45)	// 63
    
);

// # mesh size was calculated
blocks
(
    // first row
    hex (0 1 5 4 16 17 21 20) (17 4 20) simpleGrading (1 1 1)	// 1
    hex (1 2 6 5 17 18 22 21) (6 4 20) simpleGrading (1 1 1)	// 2
    hex (2 3 7 6 18 19 23 22) (17 4 20) simpleGrading (1 1 1)	// 3
    hex (4 5 9 8 20 21 25 24) (17 2 20) simpleGrading (1 1 1)	// 4
    hex (5 6 10 9 21 22 26 25) (6 2 20) simpleGrading (1 1 1)	// 5
    hex (6 7 11 10 22 23 27 26) (17 2 20) simpleGrading (1 1 1)	// 6
    hex (8 9 13 12 24 25 29 28) (17 4 20) simpleGrading (1 1 1)	// 7
    hex (9 10 14 13 25 26 30 29) (6 4 20) simpleGrading (1 1 1)	// 8
    hex (10 11 15 14 26 27 31 30) (17 4 20) simpleGrading (1 1 1)	// 9
    
    // second row
    hex (16 17 21 20 32 33 37 36) (17 4 40) simpleGrading (1 1 1)	// 10
    hex (17 18 22 21 33 34 38 37) (6 4 40) simpleGrading (1 1 1)	// 11
    hex (18 19 23 22 34 35 39 38) (17 4 40) simpleGrading (1 1 1)	// 12
    hex (20 21 25 24 36 37 41 40) (17 2 40) simpleGrading (1 1 1)	// 13
    hex (21 22 26 25 37 38 42 41) (6 2 40) simpleGrading (1 1 1)	// 14
    hex (22 23 27 26 38 39 43 42) (17 2 40) simpleGrading (1 1 1)	// 15
    hex (24 25 29 28 40 41 45 44) (17 4 40) simpleGrading (1 1 1)	// 16
    hex (25 26 30 29 41 42 46 45) (6 4 40) simpleGrading (1 1 1)	// 17
    hex (26 27 31 30 42 43 47 46) (17 4 40) simpleGrading (1 1 1)	// 18
    
    // third row
    hex (32 33 37 36 48 49 53 52) (17 4 30) simpleGrading (1 1 1)	// 19
    hex (33 34 38 37 49 50 54 53) (6 4 30) simpleGrading (1 1 1)	// 20
    hex (34 35 39 38 50 51 55 54) (17 4 30) simpleGrading (1 1 1)	// 21
    hex (36 37 41 40 52 53 57 56) (17 2 30) simpleGrading (1 1 1)	// 22
    hex (37 38 42 41 53 54 58 57) (6 2 30) simpleGrading (1 1 1)	// 23
    hex (38 39 43 42 54 55 59 58) (17 2 30) simpleGrading (1 1 1)	// 24
    hex (40 41 45 44 56 57 61 60) (17 4 30) simpleGrading (1 1 1)	// 25
    hex (41 42 46 45 57 58 62 61) (6 4 30) simpleGrading (1 1 1)	// 26
    hex (42 43 47 46 58 59 63 62) (17 4 30) simpleGrading (1 1 1)	// 27
    
);

edges
(
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (9 10 6 5)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (48 49 53 52)
            (49 50 54 53)
            (50 51 55 54)
            (52 53 57 56)
            (53 54 58 57)
            (54 55 59 58)
            (56 57 61 60)
            (57 58 62 61)
            (58 59 63 62)
        );
    }
    walls
    {
        type wall;
        faces
        (
            // bottom
            (4 5 1 0)
            (5 6 2 1)
            (6 7 3 2)
            (8 9 5 4)
            
            (10 11 7 6)
            (12 13 9 8)
            (13 14 10 9)
            (14 15 11 10)
            
            // walls - first row
            (0 1 17 16)
            (1 2 18 17)
            (2 3 19 18)
            //
            (3 7 23 19)
            (7 11 27 23)
            (11 15 31 27)
            //
            (15 14 30 31)
            (14 13 29 30)
            (13 12 28 29)
            //
            (12 8 24 28)
            (8 4 20 24)
            (4 0 16 20)
            
            // walls - second row
            (16 17 33 32)
            (17 18 34 33)
            (18 19 35 34)
            //
            (19 23 39 35)
            (23 27 43 39)
            (27 31 47 43)
            //
            (31 30 46 47)
            (30 29 45 46)
            (29 28 44 45)
            //
            (28 24 40 44)
            (24 20 36 40)
            (20 16 32 36)
            
            // walls - third row
            (32 33 49 48)
            (33 34 50 49)
            (34 35 51 50)
            //
            (35 39 55 51)
            (39 43 59 55)
            (43 47 63 59)
            //
            (47 46 62 63)
            (46 45 61 62)
            (45 44 60 61)
            //
            (44 40 56 60)
            (40 36 52 56)
            (36 32 48 52)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
