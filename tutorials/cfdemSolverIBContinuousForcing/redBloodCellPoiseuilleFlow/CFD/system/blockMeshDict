/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (-2.65  -2.65    0)
    ( 2.65  -2.65    0)
    ( 2.65   2.65    0)
    (-2.65   2.65    0)
    (-3.5355 -3.5355   0)
    ( 3.5355 -3.5355   0)
    ( 3.5355  3.5355   0)
    (-3.5355  3.5355   0)

    (-2.65  -2.65   90)
    ( 2.65  -2.65   90)
    ( 2.65   2.65   90)
    (-2.65   2.65   90)
    (-3.5355 -3.5355  90)
    ( 3.5355 -3.5355  90)
    ( 3.5355  3.5355  90)
    (-3.5355  3.5355  90)
);

blocks
(
    // inner block
    hex ( 0  1  2  3  8  9 10 11) (8 8 93) simpleGrading (1 1 1)
    // slice 1
    hex ( 0  4  5  1  8 12 13  9) (3 8 93) simpleGrading (1 1 1)
    // slice 2
    hex ( 1  5  6  2  9 13 14 10) (3 8 93) simpleGrading (1 1 1)
    // slice 3
    hex ( 2  6  7  3 10 14 15 11) (3 8 93) simpleGrading (1 1 1)
    // slice 4
    hex ( 3  7  4  0 11 15 12  8) (3 8 93) simpleGrading (1 1 1)
);



edges
(
    arc  4  5 ( 0 -5  0)
    arc 12 13 ( 0 -5 90)

    arc  5  6 ( 5  0  0)
    arc 13 14 ( 5  0 90)

    arc  6  7 ( 0  5  0)
    arc 14 15 ( 0  5 90)

    arc  7  4 (-5  0  0)
    arc 15 12 (-5  0 90)
);

boundary
(
    inlet
    {
        type            cyclicAMI;
        neighbourPatch  outlet;
        faces
        (
            (0 3 2 1)
            (0 1 5 4)
            (1 2 6 5)
            (2 3 7 6)
            (3 0 4 7)
        );
        transform       translational;
        separationVector ( 0 0 90);
    }

    outlet
    {
        type            cyclicAMI;
        neighbourPatch  inlet;
        faces
        (
            (8 9 10 11)
            (13 9 8 12)
            (14 10 9 13)
            (10 14 15 11)
            (12 8 11 15)
        );
        transform       translational;
        separationVector ( 0 0 -90);
    }

    channelWall
    {
        type            wall;
        faces
        (
            (13 12 4 5)
            (5 6 14 13)
            (6 7 15 14)
            (7 4 12 15)
        );
    }
);

mergePatchPairs
(
);


// ************************************************************************* //
