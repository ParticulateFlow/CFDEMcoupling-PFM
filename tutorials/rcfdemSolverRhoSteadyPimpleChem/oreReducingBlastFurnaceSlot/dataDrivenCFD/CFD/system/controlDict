/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     potentialFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         72000;

deltaT          0.25;

writeControl    timeStep;

writeInterval   3600;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

adjustTimeStep no;

functions
{
    conditionalStop
    {
        type abort;
        libs    ("libutilityFunctionObjects.so");
        action writeNow;
        file "ABORT";
    }

    moleFrac
    {
        type    rhoReactionThermoMoleFractions;
    }

    fieldAverage1
    {
        type            fieldAverage;
        libs            ("libfieldFunctionObjects.so");
        writeControl    writeTime;

        fields
        (
            U
            {
                mean        on;
                prime2Mean  off;
                base        time;
                window	    60.0001;
            }
	    Us
            {
                mean        on;
                prime2Mean  off;
                base        time;
                window	    60.0001;
            }
	    voidfraction
            {
                mean        on;
                prime2Mean  off;
                base        time;
                window	    60.0001;
            }
            partTemp
            {
                mean        on;
                prime2Mean  off;
                base        time;
                window	    60.0001;
            }
            T
            {
                mean        on;
                prime2Mean  off;
                base        time;
                window	    60.0001;
            }
        );
    }

   probes1
	{
		type probes;

		functionObjectLibs ("libsampling.so");

		#include "probesDict";
	} 

        inflowL
        {
            type            surfaceFieldValue;
            libs ("libfieldFunctionObjects.so");
            writeControl   timeStep;
            writeInterval   400;
            log             true;
            writeFields     false;
            regionType      patch;
            name            inletLeft;
            operation       sum;

            fields
            (
                phi
		rho
		T
                p
            );
        }

        inflowR
        {
            $inflowL;
            name      inletRight;
        }

        outflow
        {
            $inflowL;
            name      top;
        }
}

// ************************************************************************* //
