# Pour granular particles into chute container, then induce flow
echo both
atom_style      granular
atom_modify     map array
communicate     single vel yes

boundary        f f f
newton          off

units           si

region          reg block 0 0.3 0 0.08 0 0.25 units box
create_box      1 reg

neighbor        0.001 bin
neigh_modify    delay 0


# Material properties required for granular pair styles

fix         m1 all property/global youngsModulus peratomtype 5.e6
fix         m2 all property/global poissonsRatio peratomtype 0.45
fix         m3 all property/global coefficientRestitution peratomtypepair 1 0.3
fix         m4 all property/global coefficientFriction peratomtypepair 1 0.5

# pair style
pair_style  gran model hertz tangential history # Hertzian without cohesion
pair_coeff  * *

# timestep, gravity
timestep    0.00001
fix         gravi all gravity 9.81 vector 0.0 0.0 -1.0

# walls
fix     zwalls1  all wall/gran model hertz tangential history primitive type 1 zplane 0
fix     zwalls2  all wall/gran model hertz tangential history primitive type 1 zplane 0.25
fix     xwalls1  all wall/gran model hertz tangential history primitive type 1 xplane 0
fix     xwalls2  all wall/gran model hertz tangential history primitive type 1 xplane 0.3
fix     ywalls1  all wall/gran model hertz tangential history primitive type 1 yplane 0
fix     ywalls2  all wall/gran model hertz tangential history primitive type 1 yplane 0.08
#fix cfdmesh all mesh/surface file ../CFD/mesh.stl type 1 
#fix walls all wall/gran model hertz tangential history mesh n_meshes 1 meshes cfdmesh

# particle distributions and insertion
#region bc block -0.05 0.05 -0.0025 0.0025 0.05 0.1 units box
region bc block 0 0.3 0 0.08 0 0.25 units box
fix     pts1 all particletemplate/sphere 1 atom_type 1 density constant 200 radius constant 0.005
fix     pdd1 all particledistribution/discrete 1 1 pts1 1.0

fix     ins all insert/pack seed 100001 distributiontemplate pdd1 vel constant 0. 0. -1.0 insert_every 100 overlapcheck yes particles_in_region 4000 region bc

# apply nve integration to all particles that are inserted as single particles
fix     integr all nve/sphere

# screen output
compute         rke all erotate/sphere
thermo_style    custom step atoms ke c_rke vol
thermo          1000
thermo_modify   lost ignore norm no
compute_modify  thermo_temp dynamic yes

compute		pos all property/atom x y z
# insert the first particles so that dump is not empty
run         1
dump        dmp all custom 500 post/dump*.liggghts_init id type x y z ix iy iz vx vy vz fx fy fz omegax omegay omegaz radius c_pos[1] c_pos[2] c_pos[3]
#force : f_couple_cfd[0] f_couple_cfd[1] f_couple_cfd[2]
#node : f_couple_cfd[6]
#cell id : f_couple_cfd[7]

run         30000 upto
write_restart   post/restart/liggghts.restart
